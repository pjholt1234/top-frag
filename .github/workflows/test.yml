name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  go-tests:
    runs-on: ubuntu-latest
    name: Go Tests

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: cd parser-service && go mod download

    - name: Run tests
      run: cd parser-service && go test -v -cover

    - name: Run tests with coverage report
      run: cd parser-service && go test -coverprofile=coverage.out

    - name: Display coverage
      run: cd parser-service && go tool cover -func=coverage.out

  php-tests:
    runs-on: ubuntu-latest
    name: PHP Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, pgsql, pdo_pgsql, gd, exif, zip, curl, fileinfo, soap, dom, xmlreader, xmlwriter, tokenizer, xml, simplexml, phar, iconv, session, filter, hash, json, openssl, spl, standard, reflection, date, libxml, pcre, zlib, ctype, curl, mbstring, fileinfo, gd, iconv, json, mbstring, openssl, pdo, xml, zip, bcmath, calendar, exif, ffi, ftp, gettext, gmp, intl, ldap, mysqli, odbc, pcntl, pdo_dblib, pdo_firebird, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pgsql, shmop, snmp, soap, sockets, sqlite3, sysvmsg, sysvsem, sysvshm, tidy, xmlrpc, xsl, zend-opcache
        coverage: xdebug

    - name: Copy .env
      run: cp .env.example .env
      working-directory: ./backend

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./backend

    - name: Generate key
      run: php artisan key:generate
      working-directory: ./backend

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./backend

    - name: Create Database
      run: |
        php artisan migrate --force
        php artisan db:seed --force
      working-directory: ./backend

    - name: Execute tests (Unit and Feature)
      run: vendor/bin/phpunit
      working-directory: ./backend

    - name: Execute tests with coverage
      run: vendor/bin/phpunit --coverage-clover=coverage.xml
      working-directory: ./backend

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./backend/coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }} 