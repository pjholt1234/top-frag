name: PHP Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'

jobs:
  php-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, pgsql, pdo_pgsql, gd, exif, zip, curl, fileinfo, soap, dom, xmlreader, xmlwriter, tokenizer, xml, simplexml, phar, iconv, session, filter, hash, json, openssl, spl, standard, reflection, date, libxml, pcre, zlib, ctype, curl, mbstring, fileinfo, gd, iconv, json, mbstring, openssl, pdo, xml, zip, bcmath, calendar, exif, ffi, ftp, gettext, gmp, intl, ldap, mysqli, odbc, pcntl, pdo_dblib, pdo_firebird, pdo_odbc, pdo_pgsql, pdo_sqlsrv, pgsql, shmop, snmp, soap, sockets, sqlite3, sysvmsg, sysvsem, sysvshm, tidy, xmlrpc, xsl, zend-opcache
        coverage: xdebug

    - name: Copy .env
      run: cp .env.example .env
      working-directory: ./backend

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./backend

    - name: Generate key
      run: php artisan key:generate
      working-directory: ./backend

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./backend

    - name: Create Database
      run: |
        php artisan migrate --force
        php artisan db:seed --force
      working-directory: ./backend

    - name: Execute tests (Unit and Feature)
      run: vendor/bin/phpunit
      working-directory: ./backend

    - name: Execute tests with coverage
      run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-html=coverage-html
      working-directory: ./backend

    - name: Display coverage summary
      run: vendor/bin/phpunit --coverage-text
      working-directory: ./backend

    - name: Configure database for PHPBench
      run: |
        # Use PHPBench-specific environment file
        cp .env.phpbench .env
        # Create SQLite database file for PHPBench
        touch database/database.sqlite
      working-directory: ./backend

    - name: Run PHPBench benchmarks
      run: |
        # Set environment variables for PHPBench
        export DB_CONNECTION=sqlite
        export DB_DATABASE=:memory:
        export APP_ENV=phpbench
        vendor/bin/phpbench run benchmarks/ --report=aggregate --output=json --tolerate-failure
      working-directory: ./backend

    - name: Generate PHPBench HTML report
      run: |
        # Set environment variables for PHPBench
        export DB_CONNECTION=sqlite
        export DB_DATABASE=:memory:
        export APP_ENV=phpbench
        vendor/bin/phpbench run benchmarks/ --report=aggregate --output=html --tolerate-failure
      working-directory: ./backend

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: php-coverage
        path: |
          ./backend/coverage.xml
          ./backend/coverage-html/
        retention-days: 30

    - name: Upload PHPBench results
      uses: actions/upload-artifact@v4
      with:
        name: phpbench-results
        path: |
          ./backend/.phpbench/
        retention-days: 30

    - name: Upload PHPBench HTML report
      uses: actions/upload-artifact@v4
      with:
        name: phpbench-html-report
        path: |
          ./backend/.phpbench/html/
        retention-days: 30

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./backend/coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }} 