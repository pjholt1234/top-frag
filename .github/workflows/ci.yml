name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  parser-service-tests:
    runs-on: ubuntu-latest
    name: Parser Service Tests with Coverage

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: cd parser-service && go mod download

    - name: Run tests with coverage
      run: cd parser-service && go test -coverprofile=coverage.out

    - name: Generate HTML coverage report
      run: cd parser-service && go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: parser-service-coverage
        path: |
          ./parser-service/coverage.out
          ./parser-service/coverage.html
        retention-days: 30

  php-unit-tests:
    runs-on: ubuntu-latest
    name: PHP Unit Tests with Coverage

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP 8.3
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, sqlite3, gd, exif, zip, curl, fileinfo, soap, dom, xmlreader, xmlwriter, tokenizer, xml, simplexml, phar, session, filter, hash, json, openssl, spl, standard, reflection, date, libxml, pcre, zlib, bcmath, calendar, exif, ffi, ftp, gettext, gmp, intl, pcntl, shmop, snmp, soap, sockets, sysvmsg, sysvsem, sysvshm, tidy, xmlrpc, xsl, zend-opcache
        coverage: xdebug

    - name: Copy .env
      run: cp .env.example .env
      working-directory: ./backend

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./backend

    - name: Generate key
      run: php artisan key:generate
      working-directory: ./backend

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./backend

    - name: Create SQLite Database
      run: |
        php artisan migrate --force
        php artisan db:seed --force
      working-directory: ./backend

    - name: Execute tests with coverage
      run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-html=coverage-html
      working-directory: ./backend

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: php-unit-coverage
        path: |
          ./backend/coverage.xml
          ./backend/coverage-html/
        retention-days: 30

  php-benchmark:
    runs-on: ubuntu-latest
    name: PHP Benchmark

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP 8.3
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, sqlite3, gd, exif, zip, curl, fileinfo, soap, dom, xmlreader, xmlwriter, tokenizer, xml, simplexml, phar, session, filter, hash, json, openssl, spl, standard, reflection, date, libxml, pcre, zlib, bcmath, calendar, exif, ffi, ftp, gettext, gmp, intl, pcntl, shmop, snmp, soap, sockets, sysvmsg, sysvsem, sysvshm, tidy, xmlrpc, xsl, zend-opcache

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./backend

    - name: Configure SQLite for PHPBench
      run: |
        cp .env.phpbench .env
        touch database/database.sqlite
      working-directory: ./backend

    - name: Generate key
      run: php artisan key:generate
      working-directory: ./backend

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./backend

    - name: Run PHPBench benchmarks
      run: |
        export DB_CONNECTION=sqlite
        export DB_DATABASE=:memory:
        export APP_ENV=phpbench
        composer benchmark
      working-directory: ./backend

    - name: Generate PHPBench HTML report
      run: |
        export DB_CONNECTION=sqlite
        export DB_DATABASE=:memory:
        export APP_ENV=phpbench
        composer benchmark:html
      working-directory: ./backend

    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      with:
        name: php-benchmark-results
        path: |
          ./backend/.phpbench/
        retention-days: 30 